{"version":3,"sources":["components/Header.tsx","components/TextField.tsx","components/TextArea.tsx","components/tab/SymmetricForm.tsx","components/Tab.tsx","components/App.tsx","index.tsx"],"names":["Header","className","to","React","Component","TextField","props","context","onInputChange","event","setState","text","target","value","onChange","state","htmlFor","this","id","label","type","placeholder","defaultValue","TextArea","SymmetricForm","onFormSubmit","preventDefault","onSecretKeyChange","secretKey","onPlainTextChange","plainText","onEncryptClick","bytes","Aes","utils","utf8","toBytes","getPaddedString","console","log","length","ecb","ModeOfOperation","encryptedBytes","encrypt","encryptedText","fromBytes","cipherText","decrypt","str","len","newLength","Math","floor","padEnd","e","valueOf","onClick","onSubmit","name","data-value","src","title","checked","renderTextFields","style","marginTop","renderButtons","Tab","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cbc371d6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"ui secondary pointing menu\">\n        <Link to={\"/\"} className={\"item\"}>\n          Kryptonian\n        </Link>\n\n        <div className=\"ui attached stackable menu\">\n          <div className=\"ui simple dropdown right item\">\n            More\n            <i className=\"dropdown icon\"/>\n            <div className=\"menu\">\n              <a className=\"item\">\n                <i className=\"info circle icon\"/> About Kryptonian\n              </a>\n              <a className=\"item\">\n                <i className=\"user secret icon\"/> About the author\n              </a>\n            </div>\n          </div>\n        </div>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface TextFieldProps {\n  id: string;\n  label: string;\n  placeholder: string;\n  onChange: (s: string) => void;\n}\n\ninterface TextFieldState {\n  text: string;\n}\n// Set value in state and also pass to parent's callback function\nclass TextField extends React.Component<TextFieldProps, TextFieldState> {\n  constructor(props: TextFieldProps, context: any) {\n    super(props, context);\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  // arrow function fixes the this.setState issue.\n  // otherwise call as `onChange={this.onInputChange.bind(this)}` to fix this\n  onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      text: event.target.value,\n    });\n\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <label htmlFor={this.props.id}>{this.props.label}</label>\n\n        <div className=\"ui icon input\">\n          <input\n            type={\"text\"}\n            placeholder={this.props.placeholder}\n            defaultValue={this.state.text}\n            onChange={this.onInputChange}\n          />\n          <i className=\"inverted circular sync link icon\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextField;\n","import React, {ChangeEvent} from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface TextAreaProps {\n  id: string;\n  label: string;\n  placeholder: string;\n  onChange: (s: string) => void;\n}\n\ninterface TextAreaState {\n  text: string;\n}\n\nclass TextArea extends React.Component<TextAreaProps, TextAreaState> {\n  constructor(props: TextAreaProps, context: any) {\n    super(props, context);\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  onInputChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      text: event.target.value,\n    });\n\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <span className={\"ui field\"}>\n        <label htmlFor={this.props.id} className=\"ui secondary pointing\">\n          {this.props.label}\n        </label>\n        <textarea placeholder={this.props.placeholder} onChange={this.onInputChange} />\n      </span>\n    );\n  }\n}\n\nexport default TextArea;\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport Aes from \"aes-js\";\nimport TextField from \"../TextField\";\nimport TextArea from \"../TextArea\";\n\ninterface SymmetricFormState {\n  secretKey: string;\n  plainText: string;\n  cipherText: string;\n  encrypt: boolean;\n}\n\nclass SymmetricForm extends React.Component<{}, SymmetricFormState> {\n  constructor(props: {}, context: any) {\n    super(props, context);\n\n    this.state = {\n      secretKey: \"\",\n      plainText: \"Text to encrypt\",\n      cipherText: \"\",\n      encrypt: true,\n    };\n  }\n\n  onFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  onSecretKeyChange = (text: string) => {\n    this.setState({\n      secretKey: text,\n    });\n  };\n\n  onPlainTextChange = (text: string) => {\n    this.setState({\n      plainText: text,\n    });\n  };\n\n  getPaddedString(str: string) {\n    let len = str.length;\n\n    let rem = len % 16;\n    if (rem == 0) return str;\n    else {\n      let newLength = (Math.floor(len / 16) + 1) * 16;\n\n      return str.padEnd(newLength);\n    }\n  }\n\n  onEncryptClick = () => {\n    // Convert plaintext to bytes\n    let bytes = Aes.utils.utf8.toBytes(\n      this.getPaddedString(this.state.plainText)\n    );\n\n    console.log(Aes.utils.utf8.toBytes(this.state.secretKey).length);\n\n    // create Aes instance with secret key\n    let ecb = new Aes.ModeOfOperation.ecb(\n      Aes.utils.utf8.toBytes(this.state.secretKey)\n    );\n\n    let encryptedBytes = ecb.encrypt(bytes);\n\n    let encryptedText = Aes.utils.utf8.fromBytes(encryptedBytes);\n\n    this.setState({\n      cipherText: encryptedText,\n      encrypt: false,\n    });\n    console.log(\"encrypted \" + this.state.plainText + \" to \" + encryptedText)\n    console.log(\"decrypted is \" + Aes.utils.utf8.fromBytes(ecb.decrypt(encryptedBytes)))\n  };\n\n  renderTextFields() {\n    if (this.state.encrypt)\n      return (\n        <TextArea\n          label={\"Plain Text\"}\n          id={\"plain-text\"}\n          placeholder={\"Enter text to Encrypt\"}\n          onChange={(e) => this.onPlainTextChange(e.valueOf())}\n        />\n      );\n    else\n      return (\n        <TextArea\n          label={\"Secret Text\"}\n          id={\"secret-text\"}\n          placeholder={\"Enter text to Decrypt\"}\n          onChange={(e) => this.onPlainTextChange(e.valueOf())}\n        />\n      );\n  }\n\n  renderButtons() {\n    if (this.state.encrypt)\n      return (\n        <button\n          className=\"ui positive toggle button\"\n          onClick={this.onEncryptClick}\n        >\n          Encrypt\n        </button>\n      );\n    else\n      return (\n        <button\n          className=\"ui positive toggle button\"\n          onClick={this.onEncryptClick}\n        >\n          Decrypt\n        </button>\n      );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        <form className=\"ui form error\" onSubmit={this.onFormSubmit}>\n          <div className={\"ui field\"}>\n            <label>Encryption Type</label>\n            <div className=\"ui fluid selection dropdown\">\n              <input type=\"hidden\" name=\"encryptionType\" />\n\n              <i className=\"dropdown icon\" />\n\n              <div className=\"default text\">Select Encryption Type</div>\n\n              {/*\n                TODO:\n                1. Add info button for AES, DES etc\n                2. Generate Public/Private key pair and copy to clipboard\n                3. Generate Random secret key instead of having to write it yourself\n                */}\n              <div className=\"menu\">\n                <div className=\"item key\"></div>\n                <div className=\"item\" data-value=\"jenny\">\n                  <img\n                    className=\"ui mini avatar image\"\n                    src=\"/images/avatar/small/jenny.jpg\"\n                    title={\n                      \"\" +\n                      \"AES (Advanced Encryption Standard)\\n\" +\n                      \"DES (Data Encryption Standard)\\n\" +\n                      \"IDEA (International Data Encryption Algorithm)\\n\" +\n                      \"Blowfish (Drop-in replacement for DES or IDEA)\\n\" +\n                      \"RC4 (Rivest Cipher 4)\\n\" +\n                      \"RC5 (Rivest Cipher 5)\\n\" +\n                      \"RC6 (Rivest Cipher 6)\"\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            <TextField\n              label={\"Secret key\"}\n              id={\"key\"}\n              placeholder={\"Enter/Generate secret key\"}\n              onChange={(e) => this.onSecretKeyChange(e.valueOf())}\n            />\n          </div>\n\n          <div className={\"ui field\"}>\n            <div className=\"ui toggle right floated primary checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"public\"\n                checked={this.state.encrypt}\n                onChange={(e) => this.setState({ encrypt: e.target.checked })}\n              />\n              <label>Encrypt</label>\n            </div>\n          </div>\n\n          {this.renderTextFields()}\n\n          <div className={\"ui field\"} style={{ marginTop: \"10px\" }}>\n            <div className=\"ui buttons\">\n              <button className=\"ui button\">Reset</button>\n\n              <div className=\"or\" />\n\n              {this.renderButtons()}\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            <div className=\"ui buttons\">\n              <button className=\"ui positive toggle button\">\n                Create Keypair\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SymmetricForm;\n","import React from \"react\";\nimport SymmetricForm from \"./tab/SymmetricForm\";\n\nclass Tab extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached tabular menu\">\n          <div className=\"active item\">\n            <i className={\"key icon\"} />\n            Symmetric Encryption\n          </div>\n\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            Asymmetric Encryption\n          </div>\n\n          <div className=\"item\">\n            <i className={\"pencil alternate icon\"} /> Signature\n          </div>\n\n          <div className=\"item\">\n            <i className={\"hashtag icon\"} /> Hashing\n          </div>\n        </div>\n\n        <div className=\"ui bottom attached active tab segment\">\n          <SymmetricForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tab;\n","// Step 1. import React and React DOM libraries\nimport React from \"react\"; // ES2015 module system (System that defines how code can be shared between different files)\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Tab from \"./Tab\";\n\n// const React = require('react') // CommonJS module system\n\n// Step 2. Create a React component\nclass App extends React.Component {\n  render() {\n    return (<Router>\n      <div className=\"ui container\">\n        <Header/>\n\n        <Tab />\n      </div>\n    </Router>);\n  }\n}\n\nexport default App;\n","import React from 'react'; // ES2015 module system (System that defines how code can be shared between different files)\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\n// Step 3. Show the React Component on screen\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}