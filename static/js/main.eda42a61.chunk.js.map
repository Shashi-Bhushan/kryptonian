{"version":3,"sources":["components/Header.tsx","components/TextArea.tsx","components/util/util.tsx","components/tab/SymmetricForm.tsx","components/tab/Symmetric.tsx","components/AboutMe.tsx","components/tab/Asymmetric.tsx","components/tab/Signature.tsx","components/tab/Hashing.tsx","components/App.tsx","index.tsx"],"names":["Header","Menu","Item","to","className","position","text","pointing","simple","direction","React","Component","TextArea","props","context","onInputChange","event","setState","target","value","onChange","state","htmlFor","this","id","label","placeholder","EncryptionUtil","str","len","length","newLength","Math","floor","padEnd","arr","Uint8Array","window","crypto","getRandomValues","console","log","Array","from","dec2hex","join","dec","String","toString","characters","SymmetricForm","getCipherInstance","encryptionConfig","encryptionType","encryptionMode","Aes","ModeOfOperation","ecb","utils","utf8","toBytes","secretKey","cbc","Error","onFormSubmit","preventDefault","onSecretKeyChange","onPlainTextChange","plainText","onCipherTextChange","cipherText","onEncryptClick","bytes","getPaddedString","encryptedBytes","encrypt","encryptedText","Base64","fromUint8Array","onDecryptClick","toUint8Array","getPaddedBase64String","decryptedBytes","decrypt","decryptedText","fromBytes","trimEnd","keySize","e","valueOf","type","onClick","onSubmit","fluid","selection","options","encryptionOptions","result","encryptionModes","AES","keySizes","renderSecretKeyTextField","getRandomSecret","name","checked","renderTextFields","style","marginTop","renderButtons","key","Symmetric","AboutMe","Message","header","list","points","href","Asymmetric","Crypto","getCiphers","getHashes","renderSelectedTab","getKeyPair","Signature","Hashing","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"2gBA2CeA,E,uKAnCX,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,GAAI,IAAKC,UAAW,QACxB,uBAAGA,UAAU,cADf,gBAIF,kBAACH,EAAA,EAAKC,KAAN,CAAWG,SAAU,SACnB,kBAAC,IAAD,CACEC,KAAK,OACLC,UAAQ,EACRC,QAAM,EACNJ,UAAU,YACVK,UAAW,SAEX,kBAAC,IAASR,KAAV,KACE,kBAAC,IAASD,OAAV,cACA,kBAAC,IAASE,KAAV,KACE,kBAAC,IAAD,CAAMC,GAAI,aAAcC,UAAW,QACjC,uBAAGA,UAAU,qBADf,sBAIF,kBAAC,IAASF,KAAV,KACE,kBAAC,IAAD,CAAMC,GAAI,YAAaC,UAAW,QAChC,uBAAGA,UAAU,qBADf,8B,GAzBKM,IAAMC,W,mCC0CZC,E,kDAhCb,WAAYC,EAAsBC,GAAe,IAAD,8BAC9C,cAAMD,EAAOC,IAOfC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZX,KAAMU,EAAME,OAAOC,QAGrB,EAAKN,MAAMO,SAASJ,EAAME,OAAOC,QAVjC,EAAKE,MAAQ,CACXf,KAAM,IAJsC,E,qDAiB9C,OACE,0BAAMF,UAAW,YACf,2BAAOkB,QAASC,KAAKV,MAAMW,GAAIpB,UAAU,yBACtCmB,KAAKV,MAAMY,OAEd,8BACEN,MAAOI,KAAKV,MAAMM,MAClBO,YAAaH,KAAKV,MAAMa,YACxBN,SAAUG,KAAKR,qB,GA1BFL,IAAMC,W,SCbvBgB,E,6GAI0BC,GAC5B,IAAIC,EAAMD,EAAIE,OAGd,GAAW,GADDD,EAAM,GACF,OAAOD,EAEnB,IAAIG,EAAyC,IAA5BC,KAAKC,MAAMJ,EAAM,IAAM,GAExC,OAAOD,EAAIM,OAAOH,K,4CAIcH,GAClC,IAAIC,EAAMD,EAAIE,OAGd,GAAW,GADDD,EAAM,GACF,OAAOD,EAEnB,IAAIG,EAAyC,IAA5BC,KAAKC,MAAMJ,EAAM,IAAM,GAExC,OAAOD,EAAIM,OAAOH,EAAW,O,wCAIgB,IAAnBF,EAAkB,uDAAJ,GACtCM,EAAM,IAAIC,WAAWP,GAMzB,OAJAQ,OAAOC,OAAOC,gBAAgBJ,GAC9BK,QAAQC,IACN,kBAAoBZ,EAAMa,MAAMC,KAAKR,EAAKZ,KAAKqB,SAASC,KAAK,IAAIf,QAE5DY,MAAMC,KAAKR,EAAKZ,KAAKqB,SAASC,KAAK,M,8BAGrBC,GACrB,OAAOA,EAAM,GAAK,IAAMC,OAAOD,GAAOA,EAAIE,SAAS,Q,KAvCjDrB,EACWsB,WACb,iEAyCWtB,QCxBTuB,E,kDACJ,WAAYrC,EAAWC,GAAe,IAAD,8BACnC,cAAMD,EAAOC,IA8EPqC,kBAAoB,WAE1B,GAAkD,OAA9C,EAAK9B,MAAM+B,iBAAiBC,eAC9B,MAAkD,OAA9C,EAAKhC,MAAM+B,iBAAiBE,eACvB,IAAIC,IAAIC,gBAAgBC,IAC7BF,IAAIG,MAAMC,KAAKC,QAAQ,EAAKvC,MAAMwC,YAG7B,IAAIN,IAAIC,gBAAgBM,IAC7BP,IAAIG,MAAMC,KAAKC,QAAQ,EAAKvC,MAAMwC,WAClC,IAAIzB,WAAW,CAAC,EAAG,EAAG,EAAG,KAI7B,MAAM,IAAI2B,MAAM,wCA7FiB,EAiGrCC,aAAe,SAAChD,GACdA,EAAMiD,kBAlG6B,EAqGrCC,kBAAoB,SAAC5D,GACnB,EAAKW,SAAS,CACZ4C,UAAWvD,KAvGsB,EA2GrC6D,kBAAoB,SAAC7D,GACnB,EAAKW,SAAS,CACZmD,UAAW9D,KA7GsB,EAiHrC+D,mBAAqB,SAAC/D,GACpB,EAAKW,SAAS,CACZqD,WAAYhE,KAnHqB,EAuHrCiE,eAAiB,WAEf,IAAIC,EAAQjB,IAAIG,MAAMC,KAAKC,QACzBjC,EAAe8C,gBAAgB,EAAKpD,MAAM+C,YAMxCM,EAFM,EAAKvB,oBAEUwB,QAAQH,GAE7BI,EAAgBC,IAAOC,eAAeJ,GAAgB,GAE1D,EAAKzD,SAAS,CACZmD,UAAW,GACXE,WAAYM,EACZD,SAAS,KAvIwB,EA2IrCI,eAAiB,WAEf,IAAItB,EAAM,EAAKN,oBAEXuB,EAAiBG,IAAOG,aAC1BrD,EAAesD,sBAAsB,EAAK5D,MAAMiD,aAG9CY,EAAiBzB,EAAI0B,QAAQT,GAE7BU,EAAgB7B,IAAIG,MAAMC,KAAK0B,UAAUH,GAAgBI,UAE7D,EAAKrE,SAAS,CACZmD,UAAWgB,EACXd,WAAY,GACZK,SAAS,KAvJX,EAAKtD,MAAQ,CACXwC,UAAW,mBACXO,UAAW,aACXE,WAAY,GACZlB,iBAAkB,CAChBC,eAAgB,MAChBC,eAAgB,MAChBiC,QAAS,IAEXZ,SAAS,GAZwB,E,+DA8JjB,IAAD,OACjB,OAAIpD,KAAKF,MAAMsD,QAEX,kBAAC,EAAD,CACElD,MAAO,aACPD,GAAI,aACJL,MAAOI,KAAKF,MAAM+C,UAClB1C,YAAa,wBACbN,SAAU,SAACoE,GAAD,OAAO,EAAKrB,kBAAkBqB,EAAEC,cAK5C,kBAAC,EAAD,CACEhE,MAAO,cACPD,GAAI,cACJL,MAAOI,KAAKF,MAAMiD,WAClB5C,YAAa,wBACbN,SAAU,SAACoE,GAAD,OAAO,EAAKnB,mBAAmBmB,EAAEC,gB,iDAKvB,IAAD,OACzB,OAAmC,GAA/BlE,KAAKF,MAAMwC,UAAU/B,OAErB,2BACE4D,KAAM,OACNvE,MAAOI,KAAKF,MAAMwC,UAClBnC,YAAa,mBACbN,SAAU,SAACoE,GAAD,OAAO,EAAKtB,kBAAkBsB,EAAEtE,OAAOC,UAKnD,2BACEuE,KAAM,OACNvE,MAAOI,KAAKF,MAAMwC,UAClBzC,SAAU,SAACoE,GAAD,OAAO,EAAKtB,kBAAkBsB,EAAEtE,OAAOC,Y,sCAMvD,OAAII,KAAKF,MAAMsD,QAEX,4BACEvE,UAAU,4BACVuF,QAASpE,KAAKgD,gBAFhB,WASA,4BACEnE,UAAU,4BACVuF,QAASpE,KAAKwD,gBAFhB,a,+BASqB,IAAD,OACxB,OACE,6BACE,0BAAM3E,UAAU,gBAAgBwF,SAAUrE,KAAKyC,cAC7C,yBAAK5D,UAAW,YAAhB,4BAEE,kBAAC,IAAD,CACEsB,YAAY,yBACZmE,OAAK,EACLC,WAAS,EACT3E,MAAOI,KAAKF,MAAM+B,iBAAiBC,eACnC0C,QAAS7C,EAAc8C,kBACvB5E,SAAU,SAACoE,EAAGS,GACZzD,QAAQC,IAAIwD,GAEZ,EAAKhF,SAAS,CACZmC,iBAAiB,2BACZ,EAAK/B,MAAM+B,kBADA,IAEdE,eAAgB,cAO1B,yBAAKlD,UAAW,YAAhB,yBAEE,yBAAKA,UAAW,YACd,kBAAC,IAAD,CACEsB,YAAY,yBACZmE,OAAK,EACLC,WAAS,EACT3E,MAAOI,KAAKF,MAAM+B,iBAAiBE,eACnCyC,QAAS7C,EAAcgD,gBAAgBC,QAK7C,yBAAK/F,UAAW,YAAhB,kBAEE,yBAAKA,UAAW,YACd,kBAAC,IAAD,CACEsB,YAAY,kBACZmE,OAAK,EACLC,WAAS,EACT3E,MAAOI,KAAKF,MAAM+B,iBAAiBmC,QACnCQ,QAAS7C,EAAckD,SAASD,QAKtC,yBAAK/F,UAAW,YACd,2BAAOkB,QAAS,IAAhB,oBAEA,yBAAKlB,UAAU,iBACZmB,KAAK8E,2BACN,uBACEjG,UAAU,mCACVuF,QAAS,SAACH,GACR,EAAKtB,kBACHvC,EAAe2E,gBACb,EAAKjF,MAAM+B,iBAAiBmC,eAQxC,yBAAKnF,UAAW,YACd,yBAAKA,UAAU,4CACb,2BACEsF,KAAK,WACLa,KAAK,SACLC,QAASjF,KAAKF,MAAMsD,QACpBvD,SAAU,SAACoE,GAAD,OAAO,EAAKvE,SAAS,CAAE0D,QAASa,EAAEtE,OAAOsF,aAErD,4CAIHjF,KAAKkF,mBAEN,yBAAKrG,UAAW,WAAYsG,MAAO,CAAEC,UAAW,SAC9C,yBAAKvG,UAAU,cACb,4BACEA,UAAU,YACVuF,QAAS,SAACH,GAAD,OACP,EAAKvE,SAAS,CACZ4C,UAAW,GACXO,UAAW,GACXE,WAAY,GACZK,SAAS,MAPf,SAcA,yBAAKvE,UAAU,OAEdmB,KAAKqF,kBAIV,yBAAKxG,UAAW,YACd,yBAAKA,UAAU,cACb,4BAAQA,UAAU,6BAAlB,0B,GA1UcM,IAAMC,WAA5BuC,EAiBW8C,kBAAoB,CACjC,CACEa,IAAK,MACLvG,KAAM,qCACNa,MAAO,OAET,CACE0F,IAAK,MACLvG,KAAM,iCACNa,MAAO,OAET,CACE0F,IAAK,MACLvG,KAAM,wBACNa,MAAO,OAET,CACE0F,IAAK,MACLvG,KAAM,wBACNa,MAAO,OAET,CACE0F,IAAK,MACLvG,KAAM,wBACNa,MAAO,QAzCP+B,EA6CWgD,gBAAkB,CAC/BC,IAAK,CACH,CACEU,IAAK,MACLvG,KAAM,4BACNa,MAAO,OAET,CACE0F,IAAK,MACLvG,KAAM,8BACNa,MAAO,SAvDT+B,EA4DWkD,SAAW,CACxBD,IAAK,CACH,CACEU,IAAK,KACLvG,KAAM,UACNa,MAAO,IAET,CACE0F,IAAK,KACLvG,KAAM,UACNa,MAAO,IAET,CACE0F,IAAK,KACLvG,KAAM,UACNa,MAAO,MA0QA+B,QCpUA4D,E,uKAhCX,OACE,6BACE,yBAAK1G,UAAU,gCACb,yBAAKA,UAAU,eACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,yBAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,eAAV,0BAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,0BACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,cAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,iBACd,kBAAC,IAAD,CAAMD,GAAI,YAAV,aAIJ,yBAAKC,UAAU,yCACb,kBAAC,EAAD,Y,GA3BcM,IAAMC,W,SCDxBoG,E,uKAQF,OACE,6BACE,kBAACC,EAAA,EAAD,CAASC,OAAQ,iBAAkBC,KAAMH,EAAQI,SAEjD,uBAAGC,KAAM,sCAAT,UAHF,UAIE,uBAAGA,KAAM,wDAAT,iB,GAbc1G,IAAMC,WAAtBoG,EACWI,OAAS,CACtB,4BACA,6GAgBWJ,Q,kBC0DAM,E,2KA7CX7E,QAAQC,IAAI6E,IAAOC,cACnB/E,QAAQC,IAAI6E,IAAOE,e,0CAInB,OACE,yBAAKpH,UAAU,yCAAf,qB,+BAOF,OACE,6BACE,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,yBAGF,yBAAKC,UAAU,eACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,eAAV,0BAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,0BACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,cAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,iBACd,kBAAC,IAAD,CAAMD,GAAI,YAAV,aAIHoB,KAAKkG,oBAELlG,KAAKmG,kB,GAtEWhH,IAAMC,WCuChBgH,E,kLAtCX,OACE,yBAAKvH,UAAU,yCAAf,oB,+BAOF,OACE,6BACE,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,yBAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,eAAV,0BAGF,yBAAKC,UAAU,eACb,uBAAGA,UAAW,0BACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,cAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,iBACd,kBAAC,IAAD,CAAMD,GAAI,YAAV,aAIHoB,KAAKkG,yB,GAlCU/G,IAAMC,WCwCfiH,E,kLAtCX,OACE,yBAAKxH,UAAU,yCAAf,kB,+BAOF,OACE,6BACE,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,yBAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,aACd,kBAAC,IAAD,CAAMD,GAAI,eAAV,0BAGF,yBAAKC,UAAU,QACb,uBAAGA,UAAW,0BACd,kBAAC,IAAD,CAAMD,GAAI,cAAV,cAGF,yBAAKC,UAAU,eACb,uBAAGA,UAAW,iBACd,kBAAC,IAAD,CAAMD,GAAI,YAAV,aAIHoB,KAAKkG,yB,GAlCQ/G,IAAMC,WC+BbkH,E,uKAnBX,OACE,kBAAC,IAAD,KACE,yBAAKzH,UAAU,gBACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0H,KAAK,IAAIC,OAAK,EAACC,UAAWlB,IACjC,kBAAC,IAAD,CAAOgB,KAAK,aAAaC,OAAK,EAACC,UAAWlB,IAC1C,kBAAC,IAAD,CAAOgB,KAAK,cAAcC,OAAK,EAACC,UAAWX,IAC3C,kBAAC,IAAD,CAAOS,KAAK,aAAaC,OAAK,EAACC,UAAWL,IAC1C,kBAAC,IAAD,CAAOG,KAAK,WAAWC,OAAK,EAACC,UAAWJ,IACxC,kBAAC,IAAD,CAAOE,KAAK,YAAYC,OAAK,EAACC,UAAWjB,W,GAbnCrG,IAAMC,W,OCNxBsH,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.eda42a61.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport Dropdown from \"semantic-ui-react/dist/commonjs/modules/Dropdown\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Menu>\n        <Menu.Item>\n          <Link to={\"/\"} className={\"link\"}>\n            <i className=\"home icon\" /> Kryptonian\n          </Link>\n        </Menu.Item>\n        <Menu.Item position={\"right\"}>\n          <Dropdown\n            text=\"more\"\n            pointing\n            simple\n            className=\"link item\"\n            direction={\"right\"}\n          >\n            <Dropdown.Menu>\n              <Dropdown.Header>Links</Dropdown.Header>\n              <Dropdown.Item>\n                <Link to={\"/about-app\"} className={\"item\"}>\n                  <i className=\"user circle icon\" /> About Kryptonian\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link to={\"/about-me\"} className={\"item\"}>\n                  <i className=\"user secret icon\" /> About the author\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default Header;\n","import React, { ChangeEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface TextAreaProps {\n  id: string;\n  label: string;\n  placeholder: string;\n  onChange: (s: string) => void;\n  value: string;\n}\n\ninterface TextAreaState {\n  text: string;\n}\n\nclass TextArea extends React.Component<TextAreaProps, TextAreaState> {\n  constructor(props: TextAreaProps, context: any) {\n    super(props, context);\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  onInputChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      text: event.target.value,\n    });\n\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <span className={\"ui field\"}>\n        <label htmlFor={this.props.id} className=\"ui secondary pointing\">\n          {this.props.label}\n        </label>\n        <textarea\n          value={this.props.value}\n          placeholder={this.props.placeholder}\n          onChange={this.onInputChange}\n        />\n      </span>\n    );\n  }\n}\n\nexport default TextArea;\n","import { Base64 } from \"js-base64\";\n\nclass EncryptionUtil {\n  private static characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  public static getPaddedString(str: string) {\n    let len = str.length;\n\n    let rem = len % 16;\n    if (rem == 0) return str;\n    else {\n      let newLength = (Math.floor(len / 16) + 1) * 16;\n\n      return str.padEnd(newLength);\n    }\n  }\n\n  public static getPaddedBase64String(str: string) {\n    let len = str.length;\n\n    let rem = len % 16;\n    if (rem == 0) return str;\n    else {\n      let newLength = (Math.floor(len / 16) + 1) * 16;\n\n      return str.padEnd(newLength, \"=\");\n    }\n  }\n\n  public static getRandomSecret(len: number = 16) {\n    let arr = new Uint8Array(len);\n\n    window.crypto.getRandomValues(arr);\n    console.log(\n      \"secret key len \" + len + Array.from(arr, this.dec2hex).join(\"\").length\n    );\n    return Array.from(arr, this.dec2hex).join(\"\");\n  }\n\n  private static dec2hex(dec: number) {\n    return dec < 10 ? \"0\" + String(dec) : dec.toString(16);\n  }\n}\n\nexport default EncryptionUtil;\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport Aes from \"aes-js\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport TextArea from \"../TextArea\";\nimport { Base64 } from \"js-base64\";\nimport EncryptionUtil from \"../util/util\";\n\ninterface EncryptionConfiguration {\n  encryptionType: string;\n  encryptionMode: string;\n  keySize: number;\n}\n\ninterface SymmetricFormState {\n  secretKey: string;\n  plainText: string;\n  cipherText: string;\n  encryptionConfig: EncryptionConfiguration;\n  encrypt: boolean;\n}\n\nclass SymmetricForm extends React.Component<{}, SymmetricFormState> {\n  constructor(props: {}, context: any) {\n    super(props, context);\n\n    this.state = {\n      secretKey: \"TextMustBe16Byte\",\n      plainText: \"Plain text\",\n      cipherText: \"\",\n      encryptionConfig: {\n        encryptionType: \"AES\",\n        encryptionMode: \"ECB\",\n        keySize: 16,\n      },\n      encrypt: true,\n    };\n  }\n\n  private static encryptionOptions = [\n    {\n      key: \"AES\",\n      text: \"AES (Advanced Encryption Standard)\",\n      value: \"AES\",\n    },\n    {\n      key: \"DES\",\n      text: \"DES (Data Encryption Standard)\",\n      value: \"DES\",\n    },\n    {\n      key: \"RC4\",\n      text: \"RC4 (Rivest Cipher 4)\",\n      value: \"RC4\",\n    },\n    {\n      key: \"RC5\",\n      text: \"RC5 (Rivest Cipher 5)\",\n      value: \"RC5\",\n    },\n    {\n      key: \"RC6\",\n      text: \"RC6 (Rivest Cipher 6)\",\n      value: \"RC6\",\n    },\n  ];\n\n  private static encryptionModes = {\n    AES: [\n      {\n        key: \"ECB\",\n        text: \"ECB (Electronic codebook)\",\n        value: \"ECB\",\n      },\n      {\n        key: \"CBC\",\n        text: \"CBC (Cipher block chaining)\",\n        value: \"CBC\",\n      },\n    ],\n  };\n\n  private static keySizes = {\n    AES: [\n      {\n        key: \"16\",\n        text: \"16 bits\",\n        value: 16,\n      },\n      {\n        key: \"24\",\n        text: \"24 bits\",\n        value: 24,\n      },\n      {\n        key: \"32\",\n        text: \"32 bits\",\n        value: 32,\n      },\n    ],\n  };\n\n  private getCipherInstance = () => {\n    // create Aes instance with secret key\n    if (this.state.encryptionConfig.encryptionType == \"AES\") {\n      if (this.state.encryptionConfig.encryptionMode == \"ECB\") {\n        return new Aes.ModeOfOperation.ecb(\n          Aes.utils.utf8.toBytes(this.state.secretKey)\n        );\n      } else {\n        return new Aes.ModeOfOperation.cbc(\n          Aes.utils.utf8.toBytes(this.state.secretKey),\n          new Uint8Array([1, 2, 3, 4])\n        );\n      }\n    } else {\n      throw new Error(\"Valid Encryption mode not selected.\");\n    }\n  };\n\n  onFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  onSecretKeyChange = (text: string) => {\n    this.setState({\n      secretKey: text,\n    });\n  };\n\n  onPlainTextChange = (text: string) => {\n    this.setState({\n      plainText: text,\n    });\n  };\n\n  onCipherTextChange = (text: string) => {\n    this.setState({\n      cipherText: text,\n    });\n  };\n\n  onEncryptClick = () => {\n    // Convert plaintext to bytes\n    let bytes = Aes.utils.utf8.toBytes(\n      EncryptionUtil.getPaddedString(this.state.plainText)\n    );\n\n    // create Aes instance with secret key\n    let aes = this.getCipherInstance();\n\n    let encryptedBytes = aes.encrypt(bytes);\n\n    let encryptedText = Base64.fromUint8Array(encryptedBytes, true);\n\n    this.setState({\n      plainText: \"\",\n      cipherText: encryptedText,\n      encrypt: false,\n    });\n  };\n\n  onDecryptClick = () => {\n    // create Aes instance with secret key\n    let ecb = this.getCipherInstance();\n\n    let encryptedBytes = Base64.toUint8Array(\n      EncryptionUtil.getPaddedBase64String(this.state.cipherText)\n    );\n\n    let decryptedBytes = ecb.decrypt(encryptedBytes);\n\n    let decryptedText = Aes.utils.utf8.fromBytes(decryptedBytes).trimEnd();\n\n    this.setState({\n      plainText: decryptedText,\n      cipherText: \"\",\n      encrypt: true,\n    });\n  };\n\n  renderTextFields() {\n    if (this.state.encrypt)\n      return (\n        <TextArea\n          label={\"Plain Text\"}\n          id={\"plain-text\"}\n          value={this.state.plainText}\n          placeholder={\"Enter text to Encrypt\"}\n          onChange={(e) => this.onPlainTextChange(e.valueOf())}\n        />\n      );\n    else\n      return (\n        <TextArea\n          label={\"Secret Text\"}\n          id={\"secret-text\"}\n          value={this.state.cipherText}\n          placeholder={\"Enter text to Decrypt\"}\n          onChange={(e) => this.onCipherTextChange(e.valueOf())}\n        />\n      );\n  }\n\n  renderSecretKeyTextField() {\n    if (this.state.secretKey.length == 0)\n      return (\n        <input\n          type={\"text\"}\n          value={this.state.secretKey}\n          placeholder={\"Enter Secret Key\"}\n          onChange={(e) => this.onSecretKeyChange(e.target.value)}\n        />\n      );\n    else\n      return (\n        <input\n          type={\"text\"}\n          value={this.state.secretKey}\n          onChange={(e) => this.onSecretKeyChange(e.target.value)}\n        />\n      );\n  }\n\n  renderButtons() {\n    if (this.state.encrypt)\n      return (\n        <button\n          className=\"ui positive toggle button\"\n          onClick={this.onEncryptClick}\n        >\n          Encrypt\n        </button>\n      );\n    else\n      return (\n        <button\n          className=\"ui positive toggle button\"\n          onClick={this.onDecryptClick}\n        >\n          Decrypt\n        </button>\n      );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        <form className=\"ui form error\" onSubmit={this.onFormSubmit}>\n          <div className={\"ui field\"}>\n            Select Type of Encryption\n            <Dropdown\n              placeholder=\"Select Encryption Type\"\n              fluid\n              selection\n              value={this.state.encryptionConfig.encryptionType}\n              options={SymmetricForm.encryptionOptions}\n              onChange={(e, result) => {\n                console.log(result);\n\n                this.setState({\n                  encryptionConfig: {\n                    ...this.state.encryptionConfig,\n                    encryptionMode: \"AES\",\n                  },\n                });\n              }}\n            />\n          </div>\n\n          <div className={\"ui field\"}>\n            Select Encryption Mode\n            <div className={\"ui field\"}>\n              <Dropdown\n                placeholder=\"Select Encryption Mode\"\n                fluid\n                selection\n                value={this.state.encryptionConfig.encryptionMode}\n                options={SymmetricForm.encryptionModes.AES}\n              />\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            Select Key Size\n            <div className={\"ui field\"}>\n              <Dropdown\n                placeholder=\"Select Key Size\"\n                fluid\n                selection\n                value={this.state.encryptionConfig.keySize}\n                options={SymmetricForm.keySizes.AES}\n              />\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            <label htmlFor={\"\"}>Enter Secret Key</label>\n\n            <div className=\"ui icon input\">\n              {this.renderSecretKeyTextField()}\n              <i\n                className=\"inverted circular sync link icon\"\n                onClick={(e) => {\n                  this.onSecretKeyChange(\n                    EncryptionUtil.getRandomSecret(\n                      this.state.encryptionConfig.keySize\n                    )\n                  );\n                }}\n              />\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            <div className=\"ui toggle right floated primary checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"public\"\n                checked={this.state.encrypt}\n                onChange={(e) => this.setState({ encrypt: e.target.checked })}\n              />\n              <label>Encrypt</label>\n            </div>\n          </div>\n\n          {this.renderTextFields()}\n\n          <div className={\"ui field\"} style={{ marginTop: \"10px\" }}>\n            <div className=\"ui buttons\">\n              <button\n                className=\"ui button\"\n                onClick={(e) =>\n                  this.setState({\n                    secretKey: \"\",\n                    plainText: \"\",\n                    cipherText: \"\",\n                    encrypt: true,\n                  })\n                }\n              >\n                Reset\n              </button>\n\n              <div className=\"or\" />\n\n              {this.renderButtons()}\n            </div>\n          </div>\n\n          <div className={\"ui field\"}>\n            <div className=\"ui buttons\">\n              <button className=\"ui positive toggle button\">\n                Create Keypair\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SymmetricForm;\n","import React from \"react\";\nimport SymmetricForm from \"./../tab/SymmetricForm\";\nimport { Link } from \"react-router-dom\";\n\nclass Symmetric extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached tabular menu\">\n          <div className=\"active item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/symmetric\"}>Symmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/asymmetric\"}>Asymmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"pencil alternate icon\"} />\n            <Link to={\"/signature\"}>Signature</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"hashtag icon\"} />\n            <Link to={\"/hashing\"}>Hashing</Link>\n          </div>\n        </div>\n\n        <div className=\"ui bottom attached active tab segment\">\n          <SymmetricForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Symmetric;\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\nclass AboutMe extends React.Component {\n  private static points = [\n    \"Java and Kotlin developer\",\n    \"Experienced Web developer with a demonstrated history of high quality client deliverable in the IT sector\",\n\n  ];\n\n  render() {\n    return (\n      <div>\n        <Message header={\"Shashi Bhushan\"} list={AboutMe.points} />\n\n        <a href={\"https://github.com/Shashi-Bhushan/\"}>Github</a> | &nbsp;\n        <a href={\"https://www.linkedin.com/in/shashi-bhushan-98753ba8/\"}>Linkedin</a>\n      </div>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Crypto from \"crypto\";\n\nclass Asymmetric extends React.Component {\n  getKeyPair() {\n    /*let { publicKey, privateKey } = Crypto.generateKeyPairSync(\"rsa\", {\n      modulusLength: 2048,\n      publicKeyEncoding: {\n        type: \"spki\",\n        format: \"pem\",\n      },\n      privateKeyEncoding: {\n        type: \"pkcs8\",\n        format: \"pem\",\n        cipher: \"aes-256-cbc\",\n        passphrase: \"top secret\",\n      },\n    });\n\n    const data = \"my secret data\";\n\n    const encryptedData = Crypto.publicEncrypt(\n      {\n        key: publicKey,\n        padding: Crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        oaepHash: \"sha256\",\n      },\n      // We convert the data string to a buffer using `Buffer.from`\n      Buffer.from(data)\n    );\n\n    // The encrypted data is in the form of bytes, so we print it in base64 format\n    // so that it's displayed in a more readable form\n    console.log(\"encypted data: \", encryptedData.toString(\"base64\"));*/\n    console.log(Crypto.getCiphers())\n    console.log(Crypto.getHashes())\n  }\n\n  renderSelectedTab() {\n    return (\n      <div className=\"ui bottom attached active tab segment\">\n        Asymmetric Form\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached tabular menu\">\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/symmetric\"}>Symmetric Encryption</Link>\n          </div>\n\n          <div className=\"active item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/asymmetric\"}>Asymmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"pencil alternate icon\"} />\n            <Link to={\"/signature\"}>Signature</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"hashtag icon\"} />\n            <Link to={\"/hashing\"}>Hashing</Link>\n          </div>\n        </div>\n\n        {this.renderSelectedTab()}\n\n        {this.getKeyPair()}\n      </div>\n    );\n  }\n}\n\nexport default Asymmetric;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Signature extends React.Component {\n  renderSelectedTab() {\n    return (\n      <div className=\"ui bottom attached active tab segment\">\n        Signature Form\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached tabular menu\">\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/symmetric\"}>Symmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/asymmetric\"}>Asymmetric Encryption</Link>\n          </div>\n\n          <div className=\"active item\">\n            <i className={\"pencil alternate icon\"} />\n            <Link to={\"/signature\"}>Signature</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"hashtag icon\"} />\n            <Link to={\"/hashing\"}>Hashing</Link>\n          </div>\n        </div>\n\n        {this.renderSelectedTab()}\n      </div>\n    );\n  }\n}\n\nexport default Signature;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Hashing extends React.Component {\n  renderSelectedTab() {\n    return (\n      <div className=\"ui bottom attached active tab segment\">\n        Hashing Form\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached tabular menu\">\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/symmetric\"}>Symmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"key icon\"} />\n            <Link to={\"/asymmetric\"}>Asymmetric Encryption</Link>\n          </div>\n\n          <div className=\"item\">\n            <i className={\"pencil alternate icon\"} />\n            <Link to={\"/signature\"}>Signature</Link>\n          </div>\n\n          <div className=\"active item\">\n            <i className={\"hashtag icon\"} />\n            <Link to={\"/hashing\"}>Hashing</Link>\n          </div>\n        </div>\n\n        {this.renderSelectedTab()}\n      </div>\n    );\n  }\n}\n\nexport default Hashing;\n","// Step 1. import React and React DOM libraries\nimport React from \"react\"; // ES2015 module system (System that defines how code can be shared between different files)\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Symmetric from \"./tab/Symmetric\";\nimport AboutMe from \"./AboutMe\";\nimport Asymmetric from \"./tab/Asymmetric\";\nimport Signature from \"./tab/Signature\";\nimport Hashing from \"./tab/Hashing\";\n\n// const React = require('react') // CommonJS module system\n\n// Step 2. Create a React component\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"ui container\">\n          <Header />\n\n          <Switch>\n            <Route path=\"/\" exact component={Symmetric} />\n            <Route path=\"/symmetric\" exact component={Symmetric} />\n            <Route path=\"/asymmetric\" exact component={Asymmetric} />\n            <Route path=\"/signature\" exact component={Signature} />\n            <Route path=\"/hashing\" exact component={Hashing} />\n            <Route path=\"/about-me\" exact component={AboutMe} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'; // ES2015 module system (System that defines how code can be shared between different files)\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nimport 'semantic-ui-css/semantic.min.css'\n\n\n// Step 3. Show the React Component on screen\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}